class Task:
    def __init__(self, description, due_date, priority):
        self.description = description
        self.due_date = due_date
        self.priority = priority
        self.completed = False
class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def remove_task(self, task):
        self.tasks.remove(task)

    def display_tasks(self):
        for idx, task in enumerate(self.tasks):
            status = "Completed" if task.completed else "Not Completed"
            print(f"{idx+1}. {task.description} (Due: {task.due_date}, Priority: {task.priority}, Status: {status})")

    def mark_task_completed(self, task_number):
        try:
            task_number = int(task_number)
            if 1 <= task_number <= len(self.tasks):
                task = self.tasks[task_number - 1]
                task.completed = True
                print("Task marked as completed!")
            else:
                print("Invalid task number.")
        except ValueError:
            print("Invalid input. Please enter a valid task number.")

    def update_task(self, task_number, new_description, new_due_date, new_priority):
        try:
            task_number = int(task_number)
            if 1 <= task_number <= len(self.tasks):
                task = self.tasks[task_number - 1]
                task.description = new_description
                task.due_date = new_due_date
                task.priority = new_priority
                print("Task updated successfully!")
            else:
                print("Invalid task number.")
        except ValueError:
            print("Invalid input. Please enter a valid task number.")

def main():
    to_do_list = ToDoList()

    while True:
        print("""
            To-Do List
            1. Add Task
            2. Remove Task
            3. Display Tasks
            4. Mark Task as Completed
            5. Update Task
            6. Quit
        """)
        choice = input("Enter your choice: ")

        if choice == "1":
            description = input("Enter task description: ")
            due_date = input("Enter due date: ")
            priority = input("Enter priority: ")

            task = Task(description, due_date, priority)
            to_do_list.add_task(task)
            print("Task added successfully!")

        elif choice == "2":
            if len(to_do_list.tasks) == 0:
                print("No tasks found.")
            else:
                print("Select task to remove:")
                for idx, task in enumerate(to_do_list.tasks):
                    print(f"{idx+1}. {task.description}")
                task_number = int(input("Enter task number: "))
                if 1 <= task_number <= len(to_do_list.tasks):
                    to_do_list.remove_task(to_do_list.tasks[task_number-1])
                    print("Task removed successfully!")
                else:
                    print("Invalid task number.")

        elif choice == "3":
            if len(to_do_list.tasks) == 0:
                print("No tasks found.")
            else:
                print("Tasks:")
                to_do_list.display_tasks()

        elif choice == "4":
            task_number = input("Enter task number to mark as completed: ")
            to_do_list.mark_task_completed(task_number)

        elif choice == "5":
            task_number = input("Enter task number to update: ")
            new_description = input("Enter new task description: ")
            new_due_date = input("Enter new due date: ")
            new_priority = input("Enter new priority: ")
            to_do_list.update_task(task_number, new_description, new_due_date, new_priority)

        elif choice == "6":
            print("Goodbye!")
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
